// 引用 groovy 插件，编译插件工程中的代码
apply plugin: 'groovy'

// 声明仓库地址
//repositories {
//  jcenter()
//  mavenCentral()
//}

// 声明依赖的包
dependencies {
  // 声明了对Gradle框架的API的依赖。
  // Creates a dependency on the API of the current version of Gradle
  implementation gradleApi()
  // 声明了Groovy语言的API的依赖。
  // Creates a dependency on the Groovy that is distributed with the current version of Gradle.
  implementation localGroovy()
}


// 调用maven-publish插件用于发布 APG 3.6.0之前用的maven插件，之后都用maven-publish插件
apply plugin: 'maven-publish'
// 配置发布到maven时候到参数：
// 使用方式：
//   1. 拷贝本工程命名为router-gradle-plugin (Gradle无法直接发布本工程) 命令：cp -rf buildSrc router-gradle-plugin
//   2. setting.gradle中include工程router-gradle-plugin
//   3. 执行 gradlew :router-gradle-plugin:publish
//   4. 在根目录repo中可找到发布的JAR

publishing {
  publications {
    pluginMaven(MavenPublication) {
      // 设置groupId，通常为包名
      groupId 'com.wuc.router'
      // 设置artifactId，为当前插件的名称
      artifactId 'router-gradle-plugin'
      // 设置插件的版本号
      version '1.0.1'
    }
  }

  repositories {
    maven {
      // 设置发布路径为 工程目录下面的 repo 文件夹
      url uri("../repo")
    }
  }
}
//afterEvaluate {
//  publishing {
//    publications {
//      mavenDeployer(MavenPublication) {
//        // 设置 groupId 通常为包名
//        groupId = 'com.wuc.router'
//        // 设置 artifactId 为当前插件的名称
//        artifactId = 'router-gradle-plugin'
//        // 设置插件的版本号
//        version = '1.0.0'
//      }
//    }
//    repositories {
//      maven {
//        // 设置发布路径为 工程目录下面的 repo 文件夹
//        url uri('../repo')
//      }
//    }
//  }
//}


// 调用maven插件用于发布
// Gradle 7.版本将maven插件移除
//apply plugin: 'maven'
// 配置插件中的 uploadArchives 任务
//uploadArchives {
//  repositories {
//    mavenDeployer {
//      // 设置发布路径为 工程目录下面的 repo 文件夹
//      repository(url: uri('../repo')) {
//        // 设置 groupId 通常为包名
//        pom.groupId = 'com.wuc.router'
//        // 设置 artifactId 为当前插件的名称
//        pom.artifactId = 'router-gradle-plugin'
//        // 设置插件的版本号
//        pom.version = '1.0.0'
//      }
//
//    }
//  }
//}